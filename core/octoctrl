#!/bin/bash

# Arg parser
PARAMS=""
ID=""
VAL=""
MIN=""

###############
##
## FUNCTIONS
##
##

help () {
  echo
  echo "==== Help ===="
  echo "-h  | --help         : Printing this menu"
  echo "-d  | --display      : Update info display"
  echo "-s  | --shutdown     : Shutdown via chasis"
  echo "-r  | --reboot       : Reboot via chasis"
  echo "-p  | --ping         : Blink blue light for x minutes. (e.g: octo-ping --min 5)"
  echo "-f  | --fan          : Control chasis fans. (e.g: octo-fan --id 1 --val 200)"
  echo
  exit 255
}

odetect () {
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -h > /dev/shm/octo_cache.txt 2>&1
  VALIDATE=$(sudo cat /dev/shm/octo_cache.txt)
  if [[ $VALIDATE == *"libusb-0.1"* ]]; then
    wget https://static-ssl.minerstat.farm/miners/libusb-0.1-4_0.1.12-31_amd64.deb -P /tmp
    sudo dpkg -i /tmp/libusb-0.1-4_0.1.12-31_amd64.deb
    sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -h > /dev/shm/octo_cache.txt 2>&1
    VALIDATE=$(sudo cat /dev/shm/octo_cache.txt)
  fi
  if [[ $VALIDATE == *"cannot"* ]]; then
    echo "false"
  else
    echo "true"
    sudo echo "true" > /dev/shm/octo.pid
    sudo /home/minerstat/minerstat-os/core/octoctrl --display
  fi
}

odisplay () {
  # Reset
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 0,0,4 -v 0
  # Collect Data
  WORKER="$(cat /home/minerstat/minerstat-os/config.js | grep 'global.worker' | sed 's/global.worker =//g' | sed 's/;//g' | sed 's/"//g')"
  IP=`ifconfig | grep "inet" | grep -v "inet6" | grep -vE "127.0.0.1|169.254|172.17." | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | head -n 1 | grep -o -E '[.0-9]+'`
  PID=$(sudo ls /var/run/screen/S-root | grep minew | sed 's/[^0-9]*//g')
  MINER=$(sudo pstree $PID | xargs | rev | cut -d+ -f1 | rev | cut -d* -f1 | sed "s/[^a-zA-Z']/ /g" | xargs)

  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli > /dev/shm/octo_cache.txt
  sudo /home/minerstat/minerstat-os/core/gputable > /dev/shm/gputable_cache.txt

  GTEMP=$(cat /dev/shm/gputable_cache.txt | awk -F'|' '{print $4}' | xargs | sed 's/[^0-9 ]//g' | xargs)
  GFAN=$(cat /dev/shm/gputable_cache.txt | awk -F'|' '{print $5}' | xargs | sed 's/[^0-9 ]//g' | xargs)

  FANMAX=0
  TEMPMAX=0

  for vals in $GTEMP; do
    if [[ "$vals" -gt $TEMPMAX ]]; then
      TEMPMAX=$vals
    fi
  done

  for vals in $GFAN; do
    if [[ "$vals" -gt $FANMAX ]]; then
      FANMAX=$vals
    fi
  done

  FANMAX="$FANMAX%"
  TEMPMAX=$TEMPMAX"Â°C"

  POWER=$(cat /dev/shm/octo_cache.txt | grep Pac | awk '{print $10}')

  C1=$(sudo cat /dev/shm/octo_cache.txt | grep "Temperatures:" | awk -F' ' '{print $2}')
  C2=$(sudo cat /dev/shm/octo_cache.txt | grep "Temperatures:" | awk -F' ' '{print $2}')

  # Update Entries
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 1,0,3 -v "$WORKER"
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 1,2,2 -v "$IP"
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 0,4,2 -v "Miner:   $MINER"
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 0,5,2 -v "Power:   $POWER"
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 0,6,2 -v "GPUs:    $TEMPMAX  $FANMAX"
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -o 0,7,2 -v "Chasis:  $C1  $C2"
}

oshutdown () {
  # Shutdown via chasis
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -p
}

oreboot () {
  # Reboot via chasis
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -x
}

oping () {
  # Flash blue lights
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -l 1 -v 2
  screen -A -m -d -S kill_ping sudo /home/minerstat/minerstat-os/core/octoctrl --kping $MIN
}

oerr() {
  # Flash red error lights
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -l 0 -v 3
}

kping () {
  sleep $MIN
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -l 0 -v 0
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -l 1 -v 0
}

ofan () {
  # Set fans
  # fan ids: 0-8
  # val range: 0-255
  if [[ "$ID" -gt "8" ]] || [[ "$ID" -lt "0" ]]; then
    echo "Invalid ID"
    exit 1
  fi
  if [[ "$VAL" -gt "255" ]] || [[ "$VAL" -lt "0" ]]; then
    echo "Invalid VAL"
    exit 1
  fi
  sudo /home/minerstat/minerstat-os/bin/fan_controller_cli -f $ID -v $VAL
}

##
########
## PARSER
########
##

while (( "$#" )); do
  case "$1" in
    -i|--id)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        ID=$2
        shift 2
      else
        echo
        echo "================="
        echo "Error: Please provide ID" >&2
        echo "================="
        echo
        exit 1
      fi
      ;;
    -v|--val)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        VAL=$2
        shift 2
      else
        echo
        echo "================="
        echo "Error: Please provide VAL" >&2
        echo "================="
        echo
        exit 1
      fi
      ;;
    -m|--min)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        MIN=$2
        shift 2
      else
        echo
        echo "================="
        echo "Error: Please provide MIN" >&2
        echo "================="
        echo
        exit 1
      fi
      ;;
    -k|--kping)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        MIN=$2
        kping
        shift 2
      else
        echo
        echo "================="
        echo "Error: Please provide MIN" >&2
        echo "================="
        echo
        exit 1
      fi
      ;;
    -t|--detect)
      odetect
      shift
      ;;
    -h|--help)
      help
      shift
      ;;
    -d|--display)
      odisplay
      shift
      ;;
    -s|--shutdown)
      oshutdown
      shift
      ;;
    -r|--reboot)
      oreboot
      shift
      ;;
    -p|--ping)
      oping
      shift
      ;;
    -f|--fan)
      ofan
      shift
      ;;
    -*|--*=) # unsupported flags
      echo "================="
      echo "Error: Unsupported flag $1" >&2
      echo "================="
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"
echo
